%p#notice= notice

%p
  %b Uid:
  = @item.uid
%p
  %b Unique name:
  = @item.unique_name
%p
  %b Name:
  = @item.name
%p
  %b Type:
  = @item.item_type
%p
  %b Subtype:
  = @item.item_subtype
%p
  %b Npc price:
  = @item.npc_price
%p
  %b Slots:
  = @item.slots
%p
  %b Icon:
  %img{ src: @item.icon }

%p
  %b 7-Day Avg Avg Selling Price
  = @item.avg_best_selling_price(7*24)
%p
  %b 7-Day Avg Mean Selling Price
  = @item.mean_best_selling_price(7*24)


%h2 Price Over Time
.graph


%h2 Selling
- @active_items = @item.shop_items.active.vending.order(:price)
- if @active_items.length == 0
  %p There are no active shops selling this item.
- else
  %table
    %thead
      %tr
        %td
        %td Shop Name
        %td Price
        %td Quantity
        %td Vendor
        %td Location

    - @active_items.each do |shop_item|
      %tr
        %td
          %img{ src: shop_item.item.icon }
        %td= link_to shop_item.shop.title, shop_path(shop_item.shop)
        %td= number_with_delimiter shop_item.price
        %td= number_with_delimiter shop_item.quantity
        %td= shop_item.shop.username
        %td= "#{shop_item.shop.location_map} (#{shop_item.shop.location_x}, #{shop_item.shop.location_y})"



%h2 Buying
- @active_items = @item.shop_items.active.buying.order(price: :desc)
- if @active_items.length == 0
  %p There are no active shops buying this item.
- else
  %table
    %thead
      %tr
        %td
        %td Shop Name
        %td Price
        %td Quantity
        %td Vendor
        %td Location

    - @active_items.each do |shop_item|
      %tr
        %td
          %img{ src: shop_item.item.icon }
        %td= link_to shop_item.shop.title, shop_path(shop_item.shop)
        %td= number_with_delimiter shop_item.price
        %td= number_with_delimiter shop_item.quantity
        %td= shop_item.shop.username
        %td= "#{shop_item.shop.location_map} (#{shop_item.shop.location_x}, #{shop_item.shop.location_y})"





= link_to 'Back', items_path


:javascript
  var script = document.createElement('script');
  script.src = 'https://www.gstatic.com/charts/loader.js';
  document.head.appendChild(script)
  script.onload = this.loadgraph

  function loadgraph() {
    google.charts.load('current', {packages: ['corechart', 'line']});
    google.charts.setOnLoadCallback(drawGraph);
  }

  function drawGraph() {
    var data = new google.visualization.DataTable();
    data.addColumn('date', 'Date');
    data.addColumn('number', '#{@item.name}');



    var chartData = [], date;

    for(var i=0; i<this.fund.chart.length; i++) {
      var date = new Date(this.fund.chart[i][0]);
      if(this.matchData(duration, date)) {
        chartData.push([date, this.fund.chart[i][1]])
      }
    }
    data.addRows(chartData);

    var dateFormat = 'yyyy'
    if(duration == 'Y' || duration == 1 || duration == 3) {
      dateFormat = 'M/yy'
    }

    var options = {
      title: `Value of ${this.fund.symbol.toUpperCase()} over time`,
      subtitle: 'in millions of dollars (USD)',
      hAxis: {
        title: 'Date',
        format: dateFormat
      },
      vAxis: {
        title: 'Price'
      },
      legend: { position: 'top' },
      theme: 'maximized',
      formatters: {
        date: [
          {
            columnNum: 0,
            pattern: 'YYYY-MM-DD'
          }
        ]
      }
    };

    var chart = new google.visualization.LineChart(this.graphEl);
    chart.draw(data, options);
  }
